{
	"project": "semi",
	"student": {
		"first_name": "Nina",
		"last_name": "Ramiscal"
	},
	"semi_restful/main/apps/sruser_app/urls.py": {
		"raw": "from django.conf.urls import url from . import views urlpatterns = [ url(r'^$', views.index), url(r'^users$', views.index), url(r'^users/new$', views.new), url(r'^users/(?P<id>\\d+)$', views.show), url(r'^users/create$', views.create), url(r'^users/(?P<id>\\d+)/edit$', views.edit), url(r'^users/(?P<id>\\d+)/destroy$', views.destroy), url(r'^users/(?P<id>\\d+)/update$', views.update), ] "
	},
	"semi_restful/main/apps/sruser_app/migrations/0001_initial.py": {
		"raw": "# -*- coding: utf-8 -*- # Generated by Django 1.10 on 2017-07-23 23:19 from __future__ import unicode_literals from django.db import migrations, models class Migration(migrations.Migration): initial = True dependencies = [ ] operations = [ migrations.CreateModel( name='User', fields=[ ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('first_name', models.CharField(max_length=255)), ('last_name', models.CharField(max_length=255)), ('email', models.CharField(max_length=255)), ('created_at', models.DateTimeField(auto_now_add=True)), ('updated_at', models.DateTimeField(auto_now=True)), ], ), ] "
	},
	"semi_restful/main/apps/sruser_app/apps.py": {
		"raw": "from __future__ import unicode_literals from django.apps import AppConfig class SruserAppConfig(AppConfig): name = 'sruser_app' "
	},
	"semi_restful/main/apps/sruser_app/admin.py": {
		"raw": "from django.contrib import admin # Register your models here. "
	},
	"semi_restful/main/apps/sruser_app/models.py": {
		"raw": "from __future__ import unicode_literals from django.db import models # Create your models here. class User(models.Model): first_name = models.CharField(max_length = 255) last_name = models.CharField(max_length = 255) email = models.CharField(max_length = 255) created_at = models.DateTimeField(auto_now_add = True) updated_at = models.DateTimeField(auto_now = True) def __repr__(self): return \"<User object: {} {} {} {}>\".format(self.first_name, self.last_name, self.email, self.id) "
	},
	"semi_restful/main/apps/sruser_app/templates/sruser_app/edit.html": {
		"raw": "<!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>Edit User</title> </head> <body> <h2>Edit User {{user.id}}</h2> <form class=\"\" action=\"/users/{{user.id}}/update\" method=\"post\"> {% csrf_token %} <p>First name:</p> <input type=\"text\" name=\"first_name\" value=\"{{user.first_name}}\"><br> <p>Last name:</p> <input type=\"text\" name=\"last_name\" value=\"{{user.last_name}}\"><br> <p>Email:</p> <input type=\"text\" name=\"email\" value=\"{{user.email}}\"><br> <input type=\"submit\" value=\"Update\"> </form> <p><a href=\"\">Show</a> | <a href=\"\">Go Back</a></p> </body> </html> "
	},
	"semi_restful/main/apps/sruser_app/templates/sruser_app/index.html": {
		"raw": "<!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>All Users</title> <style> table { font-family: arial, sans-serif; border-collapse: collapse; width: 100%; } td, th { border: 1px solid #dddddd; text-align: left; padding: 8px; } tr:nth-child(even) { background-color: #dddddd; } </style> </head> <body> <div class=\"wrapper\"> <h2>Users</h2> <table> <tr> <th>ID</th> <th>Full Name</th> <th>Email</th> <th>Created At</th> <th>Actions</th> </tr> {% for user in users %} <tr> <td>{{user.id}}</td> <td><a href=\"#\">{{user.first_name}} {{user.last_name}}</a></td> <td>{{user.email}}</td> <td>{{user.created_at}}</td> <td><a href=\"/users/{{user.id}}\">Show</a> <a href=\"/users/{{user.id}}/edit\">Edit</a> <a href=\"/users/{{user.id}}/destroy\">Delete</a></td> </tr> {% endfor %} </table> <a href=\"/users/new\">Add a new user</a> </div> </body> </html> "
	},
	"semi_restful/main/apps/sruser_app/templates/sruser_app/show.html": {
		"raw": "<!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>Show User</title> </head> <body> <h2>User {{user.id}}</h2> <p>Full Name: {{user.first_name}} {{user.last_name}}</p> <p>Email: {{user.email}}</p> <p>Created at: {{user.created_at}}</p> <p><a href=\"/users/{{user.id}}/edit\">Edit</a> | <a href=\"/users/{{user.id}}/destroy\">Delete</a></p> <a href=\"/\">Home</a> </body> </html> "
	},
	"semi_restful/main/apps/sruser_app/templates/sruser_app/new.html": {
		"raw": "<!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>New User</title> </head> <body> <h2>Add a new user</h2> <form class=\"\" action=\"/users/create\" method=\"post\"> {% csrf_token %} <p>First name:</p> <input type=\"text\" name=\"first_name\"><br> <p>Last name:</p> <input type=\"text\" name=\"last_name\"><br> <p>Email:</p> <input type=\"text\" name=\"email\"><br> <input type=\"submit\" value=\"Create\"> </form> <a href=\"/users\">Go Back</a> </body> </html> "
	},
	"semi_restful/main/apps/sruser_app/views.py": {
		"raw": "from django.shortcuts import render, redirect, HttpResponse from datetime import datetime from models import * # urlpatterns = [ # url(r'^$', views.index), # url(r'^users$', views.index), # url(r'^users/new$', views.new), # url(r'^users/<id>$', views.show), # url(r'^users/create$', views.create), POST # url(r'^users/<id>/edit$', views.edit), # url(r'^users/<id>/destroy$', views.destroy), # url(r'^users/<id>$', views.update), POST # ] def index(request): context = { \"users\" : User.objects.all() } return render(request, 'sruser_app/index.html', context) def new(request): return render(request, 'sruser_app/new.html') def create(request): print request.POST User.objects.create(first_name = request.POST['first_name'], last_name = request.POST['last_name'], email = request.POST['email']) return redirect('/') def show(request, id): context = { \"user\" : User.objects.get(id=id) } return render(request, 'sruser_app/show.html', context) def edit(request, id): context = { \"user\" : User.objects.get(id=id) } return render(request, 'sruser_app/edit.html', context) def update(request, id): print request.POST context = { \"id\": id } b = User.objects.get(id=id) b.first_name = request.POST['first_name'] b.last_name = request.POST['last_name'] b.email = request.POST['email'] b.save() # return render(request, 'sruser_app/{}/show.html'.format(id)) return redirect('/users/{}'.format(id)) def destroy(request, id): User.objects.get(id=id).delete() return redirect('/') "
	},
	"semi_restful/main/apps/sruser_app/tests.py": {
		"raw": "from django.test import TestCase # Create your tests here. "
	},
	"semi_restful/main/manage.py": {
		"raw": "#!/usr/bin/env python import os import sys if __name__ == \"__main__\": os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"main.settings\") try: from django.core.management import execute_from_command_line except ImportError: # The above import may fail for some other reason. Ensure that the # issue is really that Django is missing to avoid masking other # exceptions on Python 2. try: import django except ImportError: raise ImportError( \"Couldn't import Django. Are you sure it's installed and \" \"available on your PYTHONPATH environment variable? Did you \" \"forget to activate a virtual environment?\" ) raise execute_from_command_line(sys.argv) "
	},
	"semi_restful/main/main/urls.py": {
		"raw": "\"\"\"main URL Configuration The `urlpatterns` list routes URLs to views. For more information please see: https://docs.djangoproject.com/en/1.10/topics/http/urls/ Examples: Function views 1. Add an import: from my_app import views 2. Add a URL to urlpatterns: url(r'^$', views.home, name='home') Class-based views 1. Add an import: from other_app.views import Home 2. Add a URL to urlpatterns: url(r'^$', Home.as_view(), name='home') Including another URLconf 1. Import the include() function: from django.conf.urls import url, include 2. Add a URL to urlpatterns: url(r'^blog/', include('blog.urls')) \"\"\" from django.conf.urls import url, include from django.contrib import admin urlpatterns = [ url(r'^', include('apps.sruser_app.urls')), ] "
	},
	"semi_restful/main/main/wsgi.py": {
		"raw": "\"\"\" WSGI config for main project. It exposes the WSGI callable as a module-level variable named ``application``. For more information on this file, see https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/ \"\"\" import os from django.core.wsgi import get_wsgi_application os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"main.settings\") application = get_wsgi_application() "
	},
	"semi_restful/main/main/settings.py": {
		"raw": "\"\"\" Django settings for main project. Generated by 'django-admin startproject' using Django 1.10. For more information on this file, see https://docs.djangoproject.com/en/1.10/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/1.10/ref/settings/ \"\"\" import os # Build paths inside the project like this: os.path.join(BASE_DIR, ...) BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = 'g3iz0nn22*%c%w0xl00l97hkx(82-km5#ko5!_ehv3b)n*10i8' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = [] # Application definition INSTALLED_APPS = [ 'apps.sruser_app', 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] ROOT_URLCONF = 'main.urls' TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ] WSGI_APPLICATION = 'main.wsgi.application' # Database # https://docs.djangoproject.com/en/1.10/ref/settings/#databases DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), } } # Password validation # https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators AUTH_PASSWORD_VALIDATORS = [ { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', }, { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', }, { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', }, { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ] # Internationalization # https://docs.djangoproject.com/en/1.10/topics/i18n/ LANGUAGE_CODE = 'en-us' TIME_ZONE = 'UTC' USE_I18N = True USE_L10N = True USE_TZ = True # Static files (CSS, JavaScript, Images) # https://docs.djangoproject.com/en/1.10/howto/static-files/ STATIC_URL = '/static/' "
	}
}